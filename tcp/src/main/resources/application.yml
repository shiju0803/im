spring:
  application:
    name: tcp
  profiles:
    active: dev

  # Redis配置
  redis:
    cluster:
      nodes: 106.52.219.98:7361,106.52.219.98:7362,106.52.219.98:7363,106.52.219.98:7364,106.52.219.98:7365,106.52.219.98:7366
      max-redirects: 3
    password: shiju1283
    timeout: 5000ms
    jedis:
      pool:
        max-active: 50  # 允许最大连接数，默认8（负值表示没有限制）
        max-idle: 2     # 最大空闲连接数，默认8
        min-idle: 0     # 最小空闲连接数，默认0
        max-wait: 3000ms    # 连接用完时，新的请求等待时间(s秒、ms毫秒)，超过该时间抛出异常JedisConnectionException，(默认-1，负值表示没有限制)

  # RabbitMQ配置
  rabbitmq:
    host: 106.52.219.98
    port: 5672
    virtual-host: /
    username: shiju1283
    password: shiju1283
    connection-timeout: 2000
    publisher-returns: true
    listener:
      simple:
        concurrency: 5
        max-concurrency: 10
        acknowledge-mode: MANUAL
        prefetch: 1
    template:
      mandatory: true
    cache:
      connection:
        mode: channel
      channel:
        size: 36
        checkout-timeout: 0

# 日志配置
logging:
  config: classpath:logback-spring.xml
  level:
    org.apache.zookeeper: INFO

# netty配置
netty:
  tcpPort: 9000 # tcp绑定的端口号
  webSocketPort: 19000 # webSocket绑定的端口号
  bossThreadSize: 1 # boss线程数量
  workThreadSize: 8 # worker线程数量
  heartBeatTime: 20000 # 心跳超时时间，单位毫秒
  brokerId: 1000 # 应用实例唯一标识
  loginModel: 3 # 登陆模式
  logicUrl: http://127.0.0.1:8000/im/v1 # 逻辑层的地址

# HttpClient配置
httpclient:
  maxTotal: 100
  defaultMaxPerRoute: 50
  connectTimeout: 2000
  connectionRequestTimeout: 2000
  socketTimeout: 5000
  staleConnectionCheckEnabled: true

# zookeeper配置
zookeeper:
  address: 106.52.219.98:2181,106.52.219.98:2182,106.52.219.98:2183
  timeout: 40000

# Redisson配置
redisson:
  model: cluster # 单机模式：single 哨兵模式：sentinel 集群模式：cluster
  database: 1
  password: shiju1283
  timeout: 3000 # 超时时间
  poolMinIdle: 8 #最小空闲数
  poolConnTimeout: 3000 # 连接超时时间(毫秒)
  poolSize: 10 # 连接池大小
  pingConnectionInterval: 60000
  address: 106.52.219.98:7361
  nodes: 106.52.219.98:7361,106.52.219.98:7362,106.52.219.98:7363,106.52.219.98:7364,106.52.219.98:7365,106.52.219.98:7366
  masterName: redis-master